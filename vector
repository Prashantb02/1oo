#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
using namespace std;
struct PersonalRecord {
 string name;
 string dob;
 string phoneNumber;
};
bool compareByName(const PersonalRecord& a, const PersonalRecord& b) {
 return a.name < b.name;
}
int main() {
 vector<PersonalRecord> records = {
 {"Alice", "1990-05-15", "123-456-7890"},
 {"Bob", "1985-11-20", "234-567-8901"},
 {"Charlie", "1992-08-10", "345-678-9012"},
 {"David", "1988-03-25", "456-789-0123"},
 {"Eva", "1995-09-05", "567-890-1234"}
 };
 sort(records.begin(), records.end(), compareByName);
 cout << "Sorted Records by Name:" << endl;
 for (const auto& record : records) {
 cout << "Name: " << record.name << ", DOB: " << record.dob << ", Phone: " << 
record.phoneNumber << endl;
 }
 string searchName;
 cout << "\nEnter a name to search: ";
 cin >> searchName;
 if (binary_search(records.begin(), records.end(), PersonalRecord{searchName, "", ""}, 
compareByName)) {
 cout << "Record found for " << searchName << endl;
 } else {
 cout << "Record not found for " << searchName << endl;
 }
 return 0;
}
